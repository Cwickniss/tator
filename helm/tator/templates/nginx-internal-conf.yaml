apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-internal-conf
data:
  nginx.conf: |
    worker_processes 1;

    events {
      worker_connections 1024;
    }

    http {
      include mime.types;
      server_names_hash_bucket_size 128;
      proxy_ignore_client_abort on;

      # If using upload shards, define load balancer here.
      {{- if hasKey .Values.pv "uploadShards" }}
      upstream tusd-load-balancer {
        hash $http_upload_uid;
        {{- range .Values.pv.uploadShards }}
        server tusd-{{ .name }}-svc:1080;
        {{- end }}
      }
      {{- end }}


      server {
        listen 80;

        server_name nginx-internal-svc;

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        client_max_body_size 0;

        location /files/ {
          #proxy_redirect http://$hostname/ http://{{ .Values.domain }}/;
          proxy_request_buffering off;
          proxy_buffering off;
          proxy_http_version 1.1;
          proxy_set_header Tus-Version 1.0.0;
          proxy_set_header Tus-Resumable 1.0.0;
          proxy_set_header X-Forwarded-Host $host;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_pass_header Authorization;
          proxy_pass_header Upload-Uid;
          {{- if hasKey .Values.pv "uploadShards" }}
          proxy_pass http://tusd-load-balancer/files/;
          {{- else }}
          proxy_pass http://tusd-svc:1080/files/;
          {{- end }}
          add_header X-Upstream $upstream_addr always;
          auth_request /auth-upload;
        }
        location /auth-upload {
          internal;
          # Allow for long responses.
          proxy_connect_timeout 1200;
          proxy_send_timeout 1200;
          proxy_read_timeout 1200;
          send_timeout 1200;

          proxy_pass http://gunicorn-svc:8000/auth-upload;
          proxy_pass_request_body off;
          proxy_set_header Host $host;
          proxy_set_header Content-Length "";
          proxy_set_header X-Original-URI $request_uri;
          proxy_set_header X-Original-METHOD $request_method;
          proxy_pass_header Authorization;
          proxy_pass_header Upload-Uid;

          proxy_http_version 1.1;
        }

        location /rest {
          # Allow for big REST responses.
          proxy_connect_timeout 1200;
          proxy_send_timeout 1200;
          proxy_read_timeout 1200;
          send_timeout 1200;

          proxy_pass http://gunicorn-svc:8000/rest;

          proxy_redirect off;
          proxy_http_version 1.1;
          proxy_set_header Connection "";
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Host $server_name;
          add_header Cache-Control "max-age=0, must-revalidate";

          gzip on;
          gzip_types application/json;
          gzip_min_length 1024;
        }

        location /auth-project {
          internal;
          # Allow for long responses.
          proxy_connect_timeout 1200;
          proxy_send_timeout 1200;
          proxy_read_timeout 1200;
          send_timeout 1200;

          proxy_pass http://gunicorn-svc:8000/auth-project;
          proxy_pass_request_body off;
          proxy_set_header Host $host;
          proxy_set_header Content-Length "";
          proxy_set_header X-Original-URI $request_uri;
          proxy_pass_header Authorization;

          proxy_http_version 1.1;
        }

        location / {
          return 404;
        }
      }
    }
