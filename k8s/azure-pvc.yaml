kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: azurefile
provisioner: kubernetes.io/azure-file
reclaimPolicy: Retain
mountOptions:
  - dir_mode=0777
  - file_mode=0777
  - uid=1000
  - gid=1000
parameters:
  skuName: Standard_LRS
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:azure-cloud-provider
rules:
- apiGroups: ['']
  resources: ['secrets']
  verbs:     ['get','create']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:azure-cloud-provider
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:azure-cloud-provider
subjects:
- kind: ServiceAccount
  name: persistent-volume-binder
  namespace: kube-system
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: upload-nfs-pv-claim
  labels:
    app: upload
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: azurefile
  resources:
    requests:
      storage: 200Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: upload-nfs-deployment
  labels:
    app: upload
spec:
  selector:
    matchLabels:
      app: upload
  replicas: 1
  template:
    metadata:
      labels:
        app: upload
    spec:
      containers:
        - name: nfs-alpine
          image: itsthenetwork/nfs-server-alpine:11
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: nfs
              containerPort: 2049
            - name: mountd
              containerPort: 20048
            - name: rpcbind
              containerPort: 111
          env:
            - name: SHARED_DIRECTORY
              value: /exports
          volumeMounts:
            - mountPath: /exports
              name: upload-nfs-pv-claim
          securityContext:
            privileged: true
      volumes:
        - name: upload-nfs-pv-claim
          persistentVolumeClaim:
            claimName: upload-nfs-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: upload-nfs-svc
  labels:
    app: upload
spec:
  ports:
    - name: nfs
      port: 2049
    - name: mountd
      port: 20048
    - name: rpcbind
      port: 111
  selector:
    app: upload
  type: ClusterIP
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: upload-pv
spec:
  capacity:
    storage: 200Gi
  accessModes:
    - ReadWriteMany
  claimRef:
    namespace: default
    name: upload-pv-claim
  nfs:
    server: upload-nfs-svc.default.svc.cluster.local
    path: "/"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: upload-pv-claim
  labels:
    app: upload
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 200Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: static-pv-claim
  labels:
    app: static
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: azurefile
  resources:
    requests:
      storage: 1Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: media-pv-claim
  labels:
    app: media
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: azurefile
  resources:
    requests:
      storage: 500Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: raw-pv-claim
  labels:
    app: raw
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: azurefile
  resources:
    requests:
      storage: 500Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgis-pv-claim
  labels:
    app: postgis
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: azurefile
  resources:
    requests:
      storage: 2Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: backup-pv-claim
  labels:
    app: backup
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: azurefile
  resources:
    requests:
      storage: 10Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: dev-pv-claim
  labels:
    app: dev
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: azurefile
  resources:
    requests:
      storage: 1Gi
