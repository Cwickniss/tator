apiVersion: apps/v1
kind: Deployment
metadata:
  name: tusd-deployment
  labels:
    app: tusd
    type: web
spec:
  selector:
    matchLabels:
      app: tusd
      type: web
  replicas: 1
  template:
    metadata:
      labels:
        app: tusd
        type: web
    spec:
{{ if .Values.awsFargate.enabled }}
{{ else }}
      nodeSelector:
        webServer: "yes"
{{ end }}
      containers:
        - name: tusd
          image: {{ .Values.dockerRegistry }}/tator_tusd
          command: ["tusd"]
          args: ["-behind-proxy","-upload-dir","/data/uploads"]
          imagePullPolicy: "IfNotPresent"
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          ports:
            - containerPort: 1080
{{ if .Values.awsStorage.enabled }}
          volumeMounts:
            - mountPath: /data/uploads
              name: efs-pv-claim
              subPath: upload
      volumes:
        - name: efs-pv-claim
          persistentVolumeClaim:
            claimName: efs-pv-claim
{{ else }}
          volumeMounts:
            - mountPath: /data/uploads
              name: upload-pv-claim
      volumes:
        - name: upload-pv-claim
          persistentVolumeClaim:
            claimName: upload-pv-claim
{{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: tusd-svc
  labels:
    app: tusd
spec:
  ports:
  - name: tus
    port: 1080
    targetPort: 1080
  selector:
    app: tusd
    type: web
  type: NodePort
