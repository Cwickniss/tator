apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: {{ .Values.hpa.nginxMinReplicas }}
  template:
    metadata:
      labels:
        app: nginx
      # Force nginx update whenever this file changes.
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/nginx-configmap.yaml") . | sha256sum }}
    spec:
{{ if .Values.awsFargate.enabled }}
{{ else }}
      nodeSelector:
        webServer: "yes"
{{ end }}
      containers:
        - name: nginx
          image: nginx:1.16
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: 300m
              memory: 200Mi
            limits:
              cpu: 4000m
          ports:
            - containerPort: 80
            - containerPort: 443
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
              name: nginx-conf
            - mountPath: /ssl/signed_chain.crt
              subPath: signed_chain.crt
              readOnly: true
              name: tls-cert
            - mountPath: /ssl/domain.key
              subPath: domain.key
              readOnly: true
              name: tls-key
            - mountPath: /data/static
              name: main-pv-claim
              subPath: static
            - mountPath: /data/media
              name: main-pv-claim
              subPath: media
            - mountPath: /data/raw
              name: main-pv-claim
              subPath: raw
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
        - name: tls-cert
          secret:
            secretName: tls-cert
            items:
              - key: signed_chain.crt
                path: signed_chain.crt
        - name: tls-key
          secret:
            secretName: tls-key
            items:
              - key: domain.key
                path: domain.key
        - name: main-pv-claim
          persistentVolumeClaim:
            claimName: main-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
{{- if .Values.metallb.enabled }}
  annotations:
    metallb.universe.tf/address-pool: my-ip-space
{{- else }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "1200"
{{- end }}
spec:
{{- if .Values.metallb.enabled }}
  loadBalancerIP: {{ .Values.metallb.loadBalancerIp }}
{{- end }}
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: nginx
  type: LoadBalancer
