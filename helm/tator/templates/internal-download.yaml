apiVersion: apps/v1
kind: Deployment
metadata:
  name: internal-download-deployment
spec:
  selector:
    matchLabels:
      app: internal-download
  replicas: 1
  template:
    metadata:
      labels:
        app: internal-download
      annotations:
        checksum/cm: {{ include (print $.Template.BasePath "/internal-download-cm.yaml") . | sha256sum }}
        checksum/tusdproxy: {{ include (print $.Template.BasePath "/_tusdProxy.tpl") . | sha256sum }}
    spec:
      {{- if .Values.awsFargate.enabled }}
      {{- else }}
      nodeSelector:
        webServer: "yes"
      {{- end }}
      containers:
        - name: nginx
          image: nginx:1.19.2
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: 250m
              memory: 500Mi
            limits:
              cpu: 4000m
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
              name: internal-download-cm
            {{ include "volumeMounts.template" . | indent 12 }}
      volumes:
        - name: internal-download-cm
          configMap:
            name: internal-download-cm
        {{ include "volumes.template" . | indent 8 }}
---
apiVersion: v1
kind: Service
metadata:
  name: internal-download-svc
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: internal-download
  type: NodePort
