{{ if .Values.postgis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgbouncer
  namespace: default
  labels:
    app: pgbouncer
spec:
  revisionHistoryLimit: 10  # removes old replicasets for deployment rollbacks
  strategy:
    rollingUpdate:
      maxUnavailable: 0  # Avoid Terminating and ContainerCreating at the same time
  selector:
    matchLabels:
      app: pgbouncer
  template:
    metadata:
      labels:
        app: pgbouncer
    spec:
      nodeSelector:
        webServer: "yes"
      containers:
        - name: pgbouncer
          image: edoburu/pgbouncer:1.8.1
          ports:
            - containerPort: 5432
          env:
            - name: POOL_MODE
              value: session
            - name: SERVER_RESET_QUERY
              value: DISCARD ALL
            - name: MAX_CLIENT_CONN
              value: "5000"
            - name: DEFAULT_POOL_SIZE
              value: "1000"
            - name: DB_HOST
              value: {{ .Values.postgresHost }}
            - name: DB_USER
              value: {{ .Values.postgresUsername }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tator-secrets
                  key: postgresPassword
            - name: DB_NAME
              value: tator_online
          livenessProbe:
            tcpSocket:
              port: 5432
            periodSeconds: 60
          lifecycle:
            preStop:
              exec:
                # Allow existing queries clients to complete within 120 seconds
                command: ["/bin/sh", "-c", "killall -INT pgbouncer && sleep 120"]
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ['all']
---
apiVersion: v1
kind: Service
metadata:
  name: pgbouncer-svc
  namespace: default
  labels:
    app: pgbouncer
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    app: pgbouncer
{{ end }}
