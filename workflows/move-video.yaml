apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: move-video-
spec:
  entrypoint: main
  ttlStrategy:
    secondsAfterSuccess: 300
    secondsAfterFailure: 86400
  arguments:
    parameters:
    - name: move_list # List of objects with src/dst.
                      # Example: [{"src": "/src/path", "dst": "/dst/path"}]
    - name: media_files 
    - name: media_id
    - name: host
    - name: token
  volumes:
  - name: upload-pv-claim
    persistentVolumeClaim:
      claimName: upload-pv-claim
  - name: media-pv-claim
    persistentVolumeClaim:
      claimName: media-pv-claim
  - name: raw-pv-claim
    persistentVolumeClaim:
      claimName: raw-pv-claim
  templates:
  - name: main
    steps:
    - - name: move-file
        template: move
        arguments:
          parameters:
          - name: src
            value: "{{item.src}}"
          - name: dst
            value: "{{item.dst}}"
        withParam: "{{workflow.parameters.move_list}}"
    - - name: patch-media
        template: patch
  - name: move
    inputs:
      parameters:
      - name: src
      - name: dst
    container:
      image: busybox:1.31.1-uclibc
      command: [mv]
      args: ["{{inputs.parameters.src}}", "{{inputs.parameters.dst}}"]
      resources:
        requests:
          memory: 128Mi
          cpu: 200m
      volumeMounts:
      - mountPath: /data/uploads
        name: upload-pv-claim
      - mountPath: /data/media
        name: media-pv-claim
      - mountPath: /data/raw
        name: raw-pv-claim
  - name: patch
    container:
      image: curlimages/curl:7.71.0
      command: [curl]
      args: ["-H", "Content-Type: application/json", "-H", "Authorization: Token {{workflow.parameters.token}}", "-X", "PATCH", "-d", "{{workflow.parameters.media_files}}", "{{workflow.parameters.host}}/rest/Media/{{workflow.parameters.media_id}}"]
      resources:
        requests:
          memory: 64Mi
          cpu: 100m

